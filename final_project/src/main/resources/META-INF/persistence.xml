<?xml version="1.0" encoding="UTF-8"?>

<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
        				http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd" 
        version="2.2">
	
	<persistence-unit name="ARGOENT_TEST" transaction-type="RESOURCE_LOCAL">
	<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		
        <class>entities_1.HS_ACCT</class>
        <class>entities_1.HS_ACCT_HOLD</class>
        <class>entities_1.HS_ACCT_NOTE</class>
        <class>entities_1.HS_ACCT_STOP</class>
        <class>entities_1.HS_ACCT_CUAC</class>
        <class>entities_1.HS_ACCT_CUST</class>
		
		<properties>
          	<property name="javax.persistence.jdbc.driver" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:sqlserver://WINDOWS-UAU12P5\SQL_SERVER_1
            					;DatabaseName=ARGOENT_TEST"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value="12345"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.SQLServerDialect"/>
            <property name="hibernate.show_sql" value="true"/>

			
			<!-- 
			hbm2ddl.auto Validate :
			If the value is validate then hibernate only validates the table 
			structure- whether the table and columns have existed or not. If the 
			table doesn’t exist then hibernate throws an exception.		
			Validate is the default value for hbm2ddl.auto.
			
			<property name="hbm2ddl.auto">validate</property>
			hbm2ddl.auto update :
			If the value is update then, Hibernate checks for the table and columns. 
			If a table doesn’t exist then it creates new tables and where as if a column 
			doesn’t exist it creates new columns for it.
			
			<property name="hbm2ddl.auto">update</property>
			But in the case of value “update” hibernate doesn’t drop any existing table, so that we don’t 
			lose existing table data.
			-->
			<property name="hibernate.hbm2ddl.auto" value=""/>  <!-- value="validate" -->
			
			<property name="hibernate.archive.autodetection" value="class, hbm" />
			
			
			<!-- Configuring Connection Pool -->
			<property name="hibernate.c3p0.min_size" value="5" />
			<property name="hibernate.c3p0.max_size" value="20" />
			<property name="hibernate.c3p0.timeout" value="500" />
			<property name="hibernate.c3p0.max_statements" value="50" />
			<property name="hibernate.c3p0.idle_test_period" value="2000" />
		</properties>
	</persistence-unit>
	
	
		<persistence-unit name="TEST_DATA_DB" transaction-type="RESOURCE_LOCAL">
	<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		
        <class>entities_2.ConsumerInfo</class>
		
		<properties>
          	<property name="javax.persistence.jdbc.driver" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:sqlserver://WINDOWS-UAU12P5\SQL_SERVER_1
            					;DatabaseName=TEST_DATA_DB"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value="12345"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.SQLServerDialect"/>
            <property name="hibernate.show_sql" value="true"/>

			<property name="hibernate.hbm2ddl.auto" value=""/>  <!-- value="validate" -->
			
			<property name="hibernate.archive.autodetection" value="class, hbm" />
			
			<!-- Configuring Connection Pool -->
			<property name="hibernate.c3p0.min_size" value="5" />
			<property name="hibernate.c3p0.max_size" value="20" />
			<property name="hibernate.c3p0.timeout" value="500" />
			<property name="hibernate.c3p0.max_statements" value="50" />
			<property name="hibernate.c3p0.idle_test_period" value="2000" />
		</properties>
	</persistence-unit>
</persistence>
